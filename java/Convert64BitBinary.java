package sci_work;

public class Convert64BitBinary {
	 public static void main(String[] args) {
		 Convert64BitBinary c = new Convert64BitBinary();
		 
		 double[] floats = {-0.16999999999999998,-0.16,-0.17,-0.165,-0.15499999999999997,-0.15999999999999998,
				 -0.17,-0.15,-0.10499999999999998,-0.045000000000000005,-0.030000000000000002,
				 0.019999999999999997,0.065,0.12000000000000001,0.05499999999999999,0.01,-0.07999999999999999,
				 -0.16,-0.17,-0.19,-0.21499999999999997,-0.21499999999999997,-0.4000000000000001,
				 -0.39000000000000007,0.475,2.07,3.28,2.345,0.22499999999999998,-0.48000000000000004,
				 -0.235,-0.23500000000000001,-0.275,-0.26000000000000006,-0.26000000000000006,
				 -0.2800000000000001,-0.265,-0.255,-0.2750000000000001,-0.24,-0.24,-0.23,-0.215,
				 -0.195,-0.19000000000000003,-0.16999999999999998,-0.175,-0.13500000000000004,
				 -0.12,-0.08,-0.08,-0.08,-0.07,-0.055,-0.05,-0.004999999999999999,-0.015,-0.030000000000000002,
				 -0.04,-0.07000000000000002,-0.08,-0.07999999999999999,-0.135,-0.12000000000000001,
				 -0.135,-0.135,-0.17,-0.16499999999999998,-0.175,-0.16499999999999998,-0.14,
				 -0.14,-0.175,-0.13500000000000004,-0.145,-0.14,-0.13000000000000003,-0.13,
				 -0.15499999999999997,-0.14000000000000004,-0.16499999999999998,-0.16,-0.13500000000000004,
				 -0.135,-0.165,-0.15,-0.155,-0.15999999999999998,-0.15999999999999998,-0.15499999999999997,
				 -0.17,-0.14999999999999997,-0.14999999999999997,-0.15999999999999998,
				 -0.15499999999999997,-0.13,-0.14999999999999997,-0.12000000000000001,
				 -0.10000000000000002,-0.05499999999999999,-0.03,0.045,0.085,0.11,
				 0.09,0.02,-0.10000000000000002,-0.14,-0.18500000000000003,-0.19000000000000003,
				 -0.20000000000000004,-0.18000000000000002,-0.395,-0.34500000000000003,0.5200000000000001,
				 2.0299999999999994,3.1300000000000003,2.1600000000000006,0.1,
				 -0.505,-0.26,-0.24000000000000002,-0.26000000000000006,-0.26000000000000006,-0.275,
				 -0.24,-0.235,-0.22499999999999998,-0.255,-0.25000000000000006,-0.24000000000000002,
				 -0.19000000000000003,-0.18,-0.19000000000000003,-0.18,
				 -0.165,-0.15999999999999998,-0.12000000000000001,-0.10000000000000002,
				 -0.09500000000000001,-0.07999999999999999,-0.07000000000000002,-0.07999999999999999,
				 -0.039999999999999994,-0.06,-0.04,-0.030000000000000002,
				 -0.035,-0.07000000000000002,-0.07,-0.1,-0.105,-0.14,-0.12000000000000001,-0.14000000000000004,
				 -0.14,-0.165,-0.18000000000000002,-0.15,-0.13,-0.175,-0.155,-0.13500000000000004,
				 -0.13,-0.14499999999999996,-0.115,-0.12000000000000001,
				 -0.14000000000000004,-0.15,-0.145,-0.15,-0.16,-0.17,-0.145,-0.165,-0.155,-0.18,
				 -0.18,-0.175,-0.165,-0.19,-0.17,-0.175,-0.155,-0.12,
				 -0.06,-0.04,0.01,0.06,0.1,0.08,0.06,-0.06,-0.12,-0.185,-0.195,-0.2,-0.195,-0.27,-0.425};
		 
		 
		// converting the floats into binary
		 String[] converted = c.ConvertArrayToBinary(floats);
		 
		 // printing the results
		 c.PrintArray(converted);
		 System.out.println();
		 
		 // getting the least significant bit of each string of binary and printing it out as one string.
		 System.out.println(c.GetLSB(converted));
	 }
	 
	 private String[] ConvertArrayToBinary(double[] array) {
		 String[] temp = new String[array.length];
		 
		 for (int i = 0; i < array.length; i++) {
			 // converting the long into a binary string
			 String binaryValue = Long.toBinaryString(Double.doubleToRawLongBits(array[i]));
			 for(int val = 0; val < 64-binaryValue.length(); val++) {
				 binaryValue = ""+binaryValue;
			 }
			 temp[i] = binaryValue;
		 }
		 
		 return temp;
	 }
	 
	 private void PrintArray(String[] array) {
		 for(String s : array){
			 System.out.println(s);
		 }
		 
	 }
	 
	 private String GetLSB (String[] array) {
		 String temp = "";
		 for(int i = 0; i < array.length; i++) {
			 temp+=array[i].charAt(array[i].length()-1);
		 }
		 return temp;
	 }
}
